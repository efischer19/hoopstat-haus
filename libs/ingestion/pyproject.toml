[tool.poetry]
name = "hoopstat-nba-ingestion"
version = "0.1.0"
description = "NBA API data ingestion library with rate limiting, Parquet conversion, and S3 upload capabilities"
authors = ["Hoopstat Haus Team"]
readme = "README.md"
packages = [{include = "hoopstat_nba_ingestion", from = "nba-api"}]

[tool.poetry.dependencies]
python = "^3.12"
nba-api = "^1.5.2"
pyarrow = "^17.0.0"
boto3 = "^1.35.0"
requests = "^2.31.0"
pydantic = "^2.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
ruff = "^0.12.3"
black = "^25.1.0"
pytest-cov = "^6.2.1"
moto = "^5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.mccabe]
max-complexity = 10

# Black configuration
[tool.black]
target-version = ["py312"]
line-length = 88

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "--strict-markers --disable-warnings"

[tool.coverage.run]
source = ["nba-api/hoopstat_nba_ingestion"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]